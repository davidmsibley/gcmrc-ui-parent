var MatrixUncertaintyResources = {};

(function() {
	var mur = MatrixUncertaintyResources;
	
	mur.times = [
		0,
		1,
		2,
		3,
		4,
		5,
		6,
		7,
		8,
		9,
		10,
		11,
		12,
		13,
		14,
		15,
		16,
		17,
		18,
		19,
		20,
		21,
		22,
		23,
		24,
		25,
		26,
		27,
		28,
		29,
		30
	];
	
	mur.datas = [
		[0, 0, 0, 0],
		[0, 1, 0, 0],
		[0, 10, 0, 0],
		[0, 15, 0, 0],
		[0, 20, 0, 0],
		[0, 35, 0, 0],
		[0, 60, 0, 0],
		[0, 100, 0, 0],
		[0, 110, 0, 0],
		[0, 110, 0, 0],
		[0, 150, 0, 0],
		[0, 180, 0, 0],
		[0, 200, 0, 0],
		[0, 200, 0, 0],
		[0, 200, 0, 0],
		[0, 210, 0, 0],
		[0, 210, 0, 0],
		[0, 220, 0, 0],
		[0, 250, 0, 0],
		[0, 280, 0, 0],
		[0, 300, 0, 0],
		[0, 310, 0, 0],
		[0, 320, 0, 0],
		[0, 330, 0, 0],
		[0, 350, 0, 0],
		[0, 400, 0, 0],
		[0, 410, 0, 0],
		[0, 426, 0, 0],
		[0, 500, 0, 0],
		[0, 510, 0, 0],
		[0, 512, 0, 0]
	];
	
	mur.results = {
		unadjusted :[
			[0, [0, 0, 0], [0, 0, 0], [0, 0, 0]],
			[1, [0.9, 1, 1.1], [1.1, 1.1, 1.1], [0.9, 0.9, 0.9]],
			[2, [9, 10, 11], [11, 11, 11], [9, 9, 9]],
			[3, [13.5, 15, 16.5], [16.5, 16.5, 16.5], [13.5, 13.5, 13.5]],
			[4, [18, 20, 22], [22, 22, 22], [18, 18, 18]],
			[5, [31.5, 35, 38.5], [38.5, 38.5, 38.5], [31.5, 31.5, 31.5]],
			[6, [54, 60, 66], [66, 66, 66], [54, 54, 54]],
			[7, [90, 100, 110], [110, 110, 110], [90, 90, 90]],
			[8, [99, 110, 121], [121, 121, 121], [99, 99, 99]],
			[9, [99, 110, 121], [121, 121, 121], [99, 99, 99]],
			[10, [135, 150, 165], [165, 165, 165], [135, 135, 135]],
			[11, [162, 180, 198], [198, 198, 198], [162, 162, 162]],
			[12, [180, 200, 220], [220, 220, 220], [180, 180, 180]],
			[13, [160, 200, 240], [240, 240, 240], [160, 160, 160]],
			[14, [160, 200, 240], [240, 240, 240], [160, 160, 160]],
			[15, [168, 210, 252], [252, 252, 252], [168, 168, 168]],
			[16, [168, 210, 252], [252, 252, 252], [168, 168, 168]],
			[17, [176, 220, 264], [264, 264, 264], [176, 176, 176]],
			[18, [200, 250, 300], [300, 300, 300], [200, 200, 200]],
			[19, [224, 280, 336], [336, 336, 336], [224, 224, 224]],
			[20, [240, 300, 360], [360, 360, 360], [240, 240, 240]],
			[21, [248, 310, 372], [372, 372, 372], [248, 248, 248]],
			[22, [256, 320, 384], [384, 384, 384], [256, 256, 256]],
			[23, [198, 330, 462], [462, 462, 462], [198, 198, 198]],
			[24, [210, 350, 490], [490, 490, 490], [210, 210, 210]],
			[25, [240, 400, 560], [560, 560, 560], [240, 240, 240]],
			[26, [246, 410, 574], [574, 574, 574], [246, 246, 246]],
			[27, [255.6, 426, 596.4], [596.4, 596.4, 596.4], [255.6, 255.6, 255.6]],
			[28, [300, 500, 700], [700, 700, 700], [300, 300, 300]],
			[29, [306, 510, 714], [714, 714, 714], [306, 306, 306]],
			[30, [307.2, 512, 716.8], [716.8, 716.8, 716.8], [307.2, 307.2, 307.2]]
		],
		javascriptSucks : [
			[0, [0, 0, 0], [0, 0, 0], [0, 0, 0]],
			[1, [0.9, 1, 1.1], [1.1, 1.1, 1.1], [0.9, 0.9, 0.9]],
			[2, [9, 10, 11], [11, 11, 11], [9, 9, 9]],
			[3, [13.5, 15, 16.5], [16.5, 16.5, 16.5], [13.5, 13.5, 13.5]],
			[4, [18, 20, 22], [22, 22, 22], [18, 18, 18]],
			[5, [31.5, 35, 38.5], [38.5, 38.5, 38.5], [31.5, 31.5, 31.5]],
			[6, [54, 60, 66], [66, 66, 66], [54, 54, 54]],
			[7, [90, 100, 110.00000000000001], [110.00000000000001, 110.00000000000001, 110.00000000000001], [90, 90, 90]],
			[8, [99, 110, 121.00000000000001], [121.00000000000001, 121.00000000000001, 121.00000000000001], [99, 99, 99]],
			[9, [99, 110, 121.00000000000001], [121.00000000000001, 121.00000000000001, 121.00000000000001], [99, 99, 99]],
			[10, [135, 150, 165], [165, 165, 165], [135, 135, 135]],
			[11, [162, 180, 198.00000000000003], [198.00000000000003, 198.00000000000003, 198.00000000000003], [162, 162, 162]],
			[12, [180, 200, 220.00000000000003], [220.00000000000003, 220.00000000000003, 220.00000000000003], [180, 180, 180]],
			[13, [160, 200, 240], [240, 240, 240], [160, 160, 160]],
			[14, [160, 200, 240], [240, 240, 240], [160, 160, 160]],
			[15, [168, 210, 252], [252, 252, 252], [168, 168, 168]],
			[16, [168, 210, 252], [252, 252, 252], [168, 168, 168]],
			[17, [176, 220, 264], [264, 264, 264], [176, 176, 176]],
			[18, [200, 250, 300], [300, 300, 300], [200, 200, 200]],
			[19, [224, 280, 336], [336, 336, 336], [224, 224, 224]],
			[20, [240, 300, 360], [360, 360, 360], [240, 240, 240]],
			[21, [248, 310, 372], [372, 372, 372], [248, 248, 248]],
			[22, [256, 320, 384], [384, 384, 384], [256, 256, 256]],
			[23, [198, 330, 461.99999999999994], [461.99999999999994, 461.99999999999994, 461.99999999999994], [198, 198, 198]],
			[24, [210, 350, 489.99999999999994], [489.99999999999994, 489.99999999999994, 489.99999999999994], [210, 210, 210]],
			[25, [240, 400, 560], [560, 560, 560], [240, 240, 240]],
			[26, [246, 410, 574], [574, 574, 574], [246, 246, 246]],
			[27, [255.6, 426, 596.4], [596.4, 596.4, 596.4], [255.6, 255.6, 255.6]],
			[28, [300, 500, 700], [700, 700, 700], [300, 300, 300]],
			[29, [306, 510, 714], [714, 714, 714], [306, 306, 306]],
			[30, [307.2, 512, 716.8], [716.8, 716.8, 716.8], [307.2, 307.2, 307.2]]
		],
		fixedToDT : [
			[0, [0, 0, 0], [0, 0, 0], [0, 0, 0]],
			[1, [0.9, 1, 1.1], [1.1, 1.1, 1.1], [0.9, 0.9, 0.9]],
			[2, [9, 10, 11], [11, 11, 11], [9, 9, 9]],
			[3, [13.5, 15, 16.5], [16.5, 16.5, 16.5], [13.5, 13.5, 13.5]],
			[4, [18, 20, 22], [22, 22, 22], [18, 18, 18]],
			[5, [31.5, 35, 38.5], [38.5, 38.5, 38.5], [31.5, 31.5, 31.5]],
			[6, [54, 60, 66], [66, 66, 66], [54, 54, 54]],
			[7, [90, 100, 110.00000000000001], [110.00000000000001, 110.00000000000001, 110.00000000000001], [90, 90, 90]],
			[8, [99, 110, 121.00000000000001], [121.00000000000001, 121.00000000000001, 121.00000000000001], [99, 99, 99]],
			[9, [99, 110, 121.00000000000001], [121.00000000000001, 121.00000000000001, 121.00000000000001], [99, 99, 99]],
			[10, [135, 150, 165], [165, 165, 165], [135, 135, 135]],
			[11, [162, 180, 198.00000000000003], [198.00000000000003, 198.00000000000003, 198.00000000000003], [162, 162, 162]],
			[12, [180, 200, 220.00000000000003], [220.00000000000003, 220.00000000000003, 220.00000000000003], [180, 180, 180]],
			[13, [180, 200, 220], [220, 220, 220], [180, 180, 180]],
			[14, [180, 200, 220], [220, 220, 220], [180, 180, 180]],
			[15, [188, 210, 232], [232, 232, 232], [188, 188, 188]],
			[16, [188, 210, 232], [232, 232, 232], [188, 188, 188]],
			[17, [196, 220, 244], [244, 244, 244], [196, 196, 196]],
			[18, [220, 250, 280], [280, 280, 280], [220, 220, 220]],
			[19, [244, 280, 316], [316, 316, 316], [244, 244, 244]],
			[20, [260, 300, 340], [340, 340, 340], [260, 260, 260]],
			[21, [268, 310, 352], [352, 352, 352], [268, 268, 268]],
			[22, [276, 320, 364], [364, 364, 364], [276, 276, 276]],
			[23, [262, 330, 397.99999999999994], [397.99999999999994, 397.99999999999994, 397.99999999999994], [262, 262, 262]],
			[24, [274, 350, 425.99999999999994], [425.99999999999994, 425.99999999999994, 425.99999999999994], [274, 274, 274]],
			[25, [304, 400, 496], [496, 496, 496], [304, 304, 304]],
			[26, [310, 410, 510], [510, 510, 510], [310, 310, 310]],
			[27, [319.6, 426, 532.4], [532.4, 532.4, 532.4], [319.6, 319.6, 319.6]],
			[28, [364, 500, 636], [636, 636, 636], [364, 364, 364]],
			[29, [370, 510, 650], [650, 650, 650], [370, 370, 370]],
			[30, [371.2, 512, 652.8], [652.8, 652.8, 652.8], [371.2, 371.2, 371.2]]
		]
	};
	
	mur.config = {
		setDataArray: {
			unadjusted: {
				"divId": "data-dygraph",
				"data": MatrixUncertaintyResources.datas,
				"time": MatrixUncertaintyResources.times,
				"endStaticRec": 13,
				"newestSuspSed": 23,
				"messageType": "setDataArray"
			}
		},
		transformArray: {
			unadjusted: {
				"divId": "data-dygraph",
				"labelDivId": "legend-dygraph",
				"a": 0.05,
				"b": 0.05,
				"c": 0.1,
				"d": 0.5,
				"e": null,
				"f": null,
				"g": null,
				"messageType": "transformArray",
				"reqId": 3
			}
		}
	};
	
})();